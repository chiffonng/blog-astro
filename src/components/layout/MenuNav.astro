---
import config from 'virtual:config'
---

<header-component
  class='group sticky top-4 z-30 mb-12 flex items-center justify-between rounded-xl border border-transparent max-sm:py-1 sm:rounded-2xl'
>
  <a
    class='z-30 text-xl font-semibold group-[.not-top]:ms-2 sm:group-[.not-top]:ms-3 brand-link'
    href='/'
    aria-label='Brand'>{config.title}</a
  >

  <div class='flex items-center gap-x-1'>
    {/* Menu links */}
    <div
      id='headerExpandContent'
      class='end-0 start-0 top-12 grid border border-transparent group-[.not-top]:rounded-xl group-[.expanded]:opacity-100 dark:group-[.expanded.not-top]:bg-muted max-sm:absolute max-sm:opacity-0 max-sm:group-[.not-top]:border-border max-sm:group-[.expanded.not-top]:bg-background max-sm:group-[.not-top]:px-4 max-sm:group-[.not-top]:py-2 sm:grid-rows-1'
    >
      <div class='flex flex-col items-center justify-center overflow-hidden sm:flex-row'>
        {
          config.header.menu.map((item) => (
            <a
              href={item.link}
              class='w-full flex-none grow py-2 text-right font-medium transition-none hover:text-primary sm:w-fit sm:px-3'
              aria-label='Nav menu item'
            >
              {item.title}
            </a>
          ))
        }
        <div class='flex w-full grow flex-row justify-end gap-x-2 sm:w-fit sm:gap-x-5'>
          {/* Search bar for large screens */}
          <button
            id='search-trigger-large'
            class='hidden lg:flex items-center gap-2 px-3 py-1.5 rounded-md border border-border bg-muted/50 text-muted-foreground hover:bg-muted hover:text-foreground transition-colors text-sm'
            onclick='openSearchModal()'
          >
            <span class='i-mingcute:search-2-line'></span>
            <span>Search...</span>
            <kbd
              class='inline-flex items-center gap-1 rounded border border-border bg-background px-1.5 py-0.5 text-xs font-mono'
            >
              <span class='text-xs mac-key'>⌘</span><span class='text-xs pc-key hidden'>Ctrl+</span
              >K
            </kbd>
          </button>

          {/* Search icon for smaller screens */}
          <button
            id='search-trigger-small'
            class='lg:hidden p-2 transition-none flex items-center justify-center'
            onclick='openSearchModal()'
            title='Search (⌘K)'
          >
            <span class='sr-only'>Search</span>
            <span class='i-mingcute:search-2-line'></span>
          </button>
        </div>
      </div>
    </div>

    {/* buttons */}
    <div class='z-30 flex gap-x-4 group-[.not-top]:gap-x-2 transition-gap'>
      <button
        id='changeTheme'
        class='group box-content size-5 rounded-md border p-1.5 transition-colors hover:bg-border sm:group-[.not-top]:rounded-xl flex items-center justify-center'
      >
        <span class='sr-only'>Change theme</span>
        <span class='i-mingcute:computer-line system group-hover:text-primary'></span>
        <span class='i-mingcute:sun-line light hidden group-hover:text-primary'></span>
        <span class='i-mingcute:moon-line dark hidden group-hover:text-primary'></span>
      </button>
      <button
        id='toggleMenu'
        class='rounded-md border p-1.5 transition-colors hover:bg-border sm:hidden sm:group-[.not-top]:rounded-xl flex items-center justify-center'
      >
        <span class='sr-only'>Menu</span>
        <span class='i-mingcute:menu-line size-5'></span>
      </button>
    </div>
  </div>
</header-component>

{/* Use inline to load icon quicker firstly */}
<script is:inline>
  const changeThemeElement = document.getElementById('changeTheme')
  if (changeThemeElement) {
    changeThemeElement.dataset.theme = localStorage.getItem('theme') || 'system'
  }
</script>
<script>
  import { setTheme, showToast } from 'astro-pure/utils'

  class Header extends HTMLElement {
    constructor() {
      super()
    }

    connectedCallback() {
      // Header with throttled scroll listener
      let preScrollY = window.scrollY
      let ticking = false

      const updateHeader = () => {
        const currentScrollY = window.scrollY
        this.classList.toggle('not-top', currentScrollY > 20)
        this.dataset.show = (currentScrollY < 350 || currentScrollY < preScrollY).toString()
        preScrollY = currentScrollY
        ticking = false
      }

      this.classList.toggle('not-top', preScrollY > 20)
      window.addEventListener(
        'scroll',
        () => {
          if (!ticking) {
            requestAnimationFrame(updateHeader)
            ticking = true
          }
        },
        { passive: true }
      )

      // Dark Mode
      const darkModeBtn = this.querySelector('#changeTheme') as HTMLElement
      darkModeBtn.addEventListener('click', () => {
        const newTheme = setTheme(undefined, true)
        darkModeBtn.dataset.theme = newTheme
        showToast({ message: `Set theme to ${newTheme}` })
      })

      // Menu
      this.querySelector('#toggleMenu')?.addEventListener('click', () => {
        this.classList.toggle('expanded')
      })
    }
  }

  customElements.define('header-component', Header)
</script>

<style>
  .brand-link {
    transition: margin-inline 0.3s;
  }

  .transition-gap {
    transition: gap 0.3s;
  }

  header-component {
    transition:
      padding 0.3s,
      transform 0.3s,
      margin-inline 0.3s,
      border 0.15s,
      background-color 0.15s;

    &.not-top {
      --un-border-opacity: 1;
      border-color: hsl(var(--border) / var(--un-border-opacity));
      --un-bg-opacity: 1;
      background-color: hsl(var(--background) / var(--un-bg-opacity));
      padding-left: 0.375rem;
      padding-right: 0.375rem;
      box-shadow:
        rgb(255, 255, 255) 0px 0px 0px 0px,
        rgba(24, 24, 27, 0.08) 0px 0px 0px 1px,
        rgba(39, 39, 42, 0.08) 0px 10px 15px -3px,
        rgba(39, 39, 42, 0.08) 0px 4px 6px -4px;
    }
    &[data-show='false']:not(.expanded) {
      transform: translateY(-5rem);
    }
  }
  @media (min-width: 800px) {
    header-component.not-top {
      margin-inline: 8%;
    }
  }
  :global(.dark) header-component.not-top {
    background-color: hsl(var(--muted) / var(--un-bg-opacity));
  }

  /* header menu */
  @media (max-width: 640px) {
    #headerExpandContent {
      grid-template-rows: 0fr;
      transition:
        opacity 0.3s,
        padding 0.3s,
        border-color 0.15s,
        grid-template-rows 0.3s;
    }
    .expanded #headerExpandContent {
      grid-template-rows: 1fr;
    }
    .expanded.not-top #headerExpandContent {
      box-shadow:
        rgb(255, 255, 255) 0px 0px 0px 0px,
        rgba(24, 24, 27, 0.08) 0px 0px 0px 1px,
        rgba(39, 39, 42, 0.08) 0px 10px 15px -3px,
        rgba(39, 39, 42, 0.08) 0px 4px 6px -4px;
    }

    /* header component after */
    header-component #headerExpandContent::after {
      box-sizing: content-box;
      content: '';
      position: absolute;
      inset-inline: calc(-1rem - 1px);
      bottom: 0;
      top: -5rem;
      z-index: -1;
      transition: 0.3s;
      visibility: hidden;
      opacity: 0;
      border-bottom: 1px solid transparent;
    }
    header-component:not(.not-top) #headerExpandContent::after {
      visibility: visible;
      bottom: -1rem;
      opacity: 1;
      background-color: hsl(var(--muted) / var(--un-bg-opacity, 1));
      border-bottom-color: hsl(var(--border) / var(--un-border-opacity, 1));
    }
  }

  /* dark light mode toggle - show action icon, not current state */
  #changeTheme {
    /* Default: show system icon when theme is system */
    & .light,
    & .dark {
      display: none;
    }
    & .system {
      display: block;
    }

    /* When dark theme is active, show sun icon (action: switch to light) */
    &[data-theme='dark'] {
      & .system,
      & .dark {
        display: none;
      }
      & .light {
        display: block;
      }
    }

    /* When light theme is active, show moon icon (action: switch to dark) */
    &[data-theme='light'] {
      & .system,
      & .light {
        display: none;
      }
      & .dark {
        display: block;
      }
    }
  }
</style>
