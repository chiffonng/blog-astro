---
import type { ToolProps as Props } from '@/components/types'
import { IconRenderer } from '@/components'

import { ToolTag } from './tool-tag'

const tagStyles: Record<ToolTag, string> = {
  [ToolTag.OpenSource]: 'badge-yellow',
  [ToolTag.SelfHosted]: 'badge-green',
  [ToolTag.Favorite]: 'badge-blue',
  [ToolTag.Free]: 'badge-gray',
  [ToolTag.Gifted]: 'badge-gray',
  [ToolTag.SecondHand]: 'badge-red',
  [ToolTag.Paid]: 'badge-red',
  [ToolTag.Subscription]: 'badge-base bg-primary text-primary-foreground',
  [ToolTag.Organization]: 'badge-base bg-primary text-primary-foreground',
  [ToolTag.Bundle]: 'badge-base bg-primary text-primary-foreground',
  [ToolTag.Web]: 'badge-blue',
  [ToolTag.Mobile]: 'badge-green',
  [ToolTag.Desktop]: 'badge-purple'
}

const { name, description, href, icon, tags } = Astro.props
---

<a class='group relative text-sm leading-normal no-underline' href={href} id={name} target='_blank'>
  <div
    class='flex items-center gap-x-3 rounded-lg border border-transparent px-1.5 py-1 transition-colors hover:border-border hover:bg-muted'
  >
    <IconRenderer icon={icon} alt={name} />
    <div class='z-20 flex flex-col'>
      <div class='flex items-center gap-2'>
        <div class='font-medium text-foreground'>{name}</div>
        <div class='flex gap-1'>
          {
            tags
              ?.filter((tag: ToolTag) => Object.values(ToolTag).includes(tag))
              .map((tag: ToolTag) => <span class={tagStyles[tag]}>{tag}</span>)
          }
        </div>
      </div>
      <div>{description}</div>
    </div>
  </div>
</a>
