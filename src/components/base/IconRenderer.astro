---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'

import type { IconRendererProps as Props } from '@/types/components'
import { Svg } from '@/components'

function isImageMetadata(obj: unknown): obj is ImageMetadata {
  return !!(obj && typeof obj === 'object' && 'src' in obj)
}

function isPromise<T>(obj: unknown): obj is Promise<T> {
  return !!(obj && typeof obj === 'object' && 'then' in obj && typeof obj.then === 'function')
}

const { icon, alt, class: className = '' } = Astro.props

// Check if it's a CSS icon class (starts with 'i-')
const isCssIcon = typeof icon === 'string' && icon.startsWith('i-')
---

{
  isCssIcon ? (
    <div class:list={['size-10 rounded-lg bg-primary-foreground p-2', className]}>
      <span class:list={[icon, 'h-full w-full inline-block']} aria-label={alt} />
    </div>
  ) : isImageMetadata(icon) ? (
    <div class:list={['size-10 rounded-lg bg-primary-foreground p-2', className]}>
      <Image src={icon} alt={alt} class='h-full w-full object-contain' />
    </div>
  ) : isPromise(icon) ? (
    <Svg
      src={icon}
      class:list={['size-10 rounded-lg bg-primary-foreground fill-foreground p-2', className]}
    />
  ) : (
    <div class:list={['size-10 rounded-lg bg-primary-foreground p-2', className]}>
      <span class='text-red-500' aria-label={`Invalid icon type: ${typeof icon}`}>
        ‚ùå
      </span>
    </div>
  )
}
