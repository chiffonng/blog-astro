---
interface Props {
  class?: string
  iconClass?: string
  label?: string
  id?: string
  type?: 'button' | 'submit' | 'reset'
  disabled?: boolean
}

const {
  class: className,
  iconClass,
  label,
  id,
  type = 'button',
  disabled = false,
  ...props
} = Astro.props

// At least one of iconClass or label must be provided
if (!iconClass && !label) {
  throw new Error('Button component requires either iconClass or label prop')
}
---

<button
  {id}
  {type}
  {disabled}
  class:list={[
    'group inline-flex items-center gap-2 px-2 py-1.5 border-2 border-border text-sm font-medium rounded-lg hover:bg-primary hover:text-primary-foreground hover:border-primary transition-all duration-200 cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed',
    'sm:rounded-xl',
    className
  ]}
  {...props}
>
  {iconClass && <span class={iconClass} />}
  {
    label && (
      <>
        <span class='hidden sm:inline'>{label}</span>
        <span class='sm:hidden sr-only'>{label}</span>
      </>
    )
  }
</button>
