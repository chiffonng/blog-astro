---
import type { SearchBoxProps as Props } from '@/components/types'

const { class: className } = Astro.props
---

<!-- Responsive search link that adapts to screen size -->
<a
  id='search-trigger'
  href='/search'
  class:list={[
    'flex items-center transition-colors text-sm text-muted-foreground hover:text-foreground',
    'rounded-md border p-1.5 hover:bg-border justify-center lg:justify-start',
    'lg:gap-2 lg:border-border lg:bg-muted/50 lg:hover:bg-muted lg:px-3 lg:py-1.5 lg:w-fit',
    'relative',
    className
  ]}
  title='Search'
>
  <span class='i-mingcute:search-2-line flex-shrink-0'></span>
  <span class='hidden lg:inline'>Search</span>
  <kbd
    class='hidden md:inline-flex items-center gap-1 rounded border border-border bg-background px-1.5 py-0.5 text-xs font-mono text-muted-foreground'
  >
  </kbd>
</a>

<script>
  import { modifierKey } from '@/lib'

  // Handle keyboard shortcut navigation to search page
  document.addEventListener('DOMContentLoaded', () => {
    const searchTrigger = document.getElementById('search-trigger')
    const kbd = searchTrigger?.querySelector('kbd')

    if (kbd) {
      kbd.textContent = `${modifierKey}K`
    }

    if (searchTrigger) {
      searchTrigger.title = `Search (${modifierKey}K)`
    }

    // TEMP: Handle Cmd+K / Ctrl+K navigation to search page
    document.addEventListener('keydown', (e) => {
      if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
        e.preventDefault()
        window.location.href = '/search'
      }
    })
  })
</script>
