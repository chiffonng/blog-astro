---
import config from 'virtual:config'

import processProfileLinks from '@/schemas/contacts'
import { profileLinks } from '@/site-config'

const year = new Date().getFullYear()
const footerConf = config.footer

const socialIcons = processProfileLinks({
  ...profileLinks,
  rss: '/rss.xml' // Add RSS to contacts
})

// Shared styles
const separator = '/'
const separatorClass = 'text-muted-foreground/50'
const socialLinkClass = 'inline-flex'
const iconStyleClass = 'group-hover:scale-110 transition-transform'
const gridRowClass =
  'flex flex-col items-center gap-3 text-center lg:flex-row lg:items-center lg:gap-4 sm:flex-row sm:justify-center sm:gap-2'
---

<footer class='mx-0 mb-5 mt-auto'>
  <div class='border-t pt-3'></div>
  <div
    class='items-center text-muted-foreground text-sm [&_a]:text-foreground hover:[&_a]:text-primary'
  >
    {/* Mobile: stacked and centered */}
    <div class='flex flex-col items-center gap-y-4 text-center sm:hidden'>
      <div class='whitespace-nowrap'>© {year} {config.author}</div>

      {
        footerConf.credits && (
          <div class='whitespace-nowrap'>
            Powered by{' '}
            <a href='https://astro.build/' target='_blank'>
              Astro
            </a>
            ,{' '}
            <a href='https://unocss.dev/' target='_blank'>
              UnoCSS
            </a>
            ,{' '}
            <a href='https://astro-pure.js.org/' target='_blank'>
              Pure
            </a>{' '}
            theme
          </div>
        )
      }

      {
        footerConf.links && footerConf.links.length > 0 && (
          <div>
            {footerConf.links.map(
              (
                { title, link, style = '' }: { title: string; link: string; style?: string },
                index: number
              ) => (
                <>
                  <a href={link} target='_blank' class={style}>
                    {title}
                  </a>
                  {index < (footerConf.links?.length ?? 0) - 1 && (
                    <span class={separatorClass}>{separator}</span>
                  )}
                </>
              )
            )}
          </div>
        )
      }

      <div class='flex items-center gap-x-2'>
        {
          socialIcons.map(({ url, label, iconClass }) => (
            <a href={url} target='_blank' aria-label={label} title={label}>
              <div class={`${iconClass} ${iconStyleClass}`} />
            </a>
          ))
        }
      </div>
    </div>

    {/* Medium: 2x2 grid, Large: side-by-side */}
    <div class='hidden sm:block'>
      <div class='flex flex-col gap-4 lg:flex-row lg:items-center lg:justify-between'>
        {/* First row: Copyright + Credits */}
        <div class={gridRowClass}>
          <div class='whitespace-nowrap'>© {year} {config.author}</div>
          {
            footerConf.credits && (
              <span class={`hidden sm:inline ${separatorClass}`}>{separator}</span>
            )
          }
          {
            footerConf.credits && (
              <div class='whitespace-nowrap'>
                Powered by{' '}
                <a href='https://astro.build/' target='_blank'>
                  Astro
                </a>
                ,{' '}
                <a href='https://unocss.dev/' target='_blank'>
                  UnoCSS
                </a>{' '}
                &{' '}
                <a href='https://github.com/cworld1/astro-theme-pure' target='_blank'>
                  Pure
                </a>{' '}
                theme
              </div>
            )
          }
        </div>

        {/* Second row: Links + Social Icons */}
        <div class={gridRowClass}>
          {
            footerConf.links && footerConf.links.length > 0 && (
              <>
                <div>
                  {footerConf.links.map(
                    (
                      { title, link, style = '' }: { title: string; link: string; style?: string },
                      index: number
                    ) => (
                      <>
                        <a href={link} target='_blank' class={style}>
                          {title}
                        </a>
                        {index < (footerConf.links?.length ?? 0) - 1 && (
                          <span class={separatorClass}>{separator}</span>
                        )}
                      </>
                    )
                  )}
                </div>
                {/* Hidden separator for medium screen */}
                <span class={`hidden sm:inline ${separatorClass}`}>{separator}</span>
              </>
            )
          }

          <div class='flex items-center gap-x-2'>
            {
              socialIcons.map(({ url, label, iconClass }) => (
                <a
                  href={url}
                  target='_blank'
                  class={socialLinkClass}
                  aria-label={label}
                  title={label}
                >
                  <div class={`${iconClass} ${iconStyleClass}`} />
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</footer>
