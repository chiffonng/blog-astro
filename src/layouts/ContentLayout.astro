---
import { BackToTop } from 'astro-pure/components/pages'
import type { SiteMeta } from 'astro-pure/types'
import { Button } from 'astro-pure/user'
import { cn } from 'astro-pure/utils'
import PageLayout from '@/layouts/BaseLayout.astro'
import { integ } from '@/site-config'

interface Props {
  meta: SiteMeta
  highlightColor?: string
  back?: string
}

const { meta, highlightColor, back = '/', ...props } = Astro.props
const hasSidebarContent = Astro.slots.has('sidebar') || Astro.slots.has('bottom-sidebar')
---

<PageLayout {meta} {highlightColor} {...props}>
  <Button title='Back' href={back} style='back' />
  <main class='mt-6 items-start gap-x-10 md:flex'>
    {/* Sidebar - only render if there's content */}
    {
      hasSidebarContent && (
        <aside
          class='animate top-20 min-w-48 basis-60 overflow-y-auto max-md:hidden md:sticky md:order-2 lg:shrink-0'
          style='height:calc(100vh - 7rem);'
          id='sidebar'
        >
          <slot name='sidebar' />
        </aside>
      )
    }

    <article class='min-w-0 grow'>
      {/* Content header */}
      <div id='content-header' class='animate'>
        <slot name='header' />
      </div>

      {/* Content */}
      <div
        id='content'
        class={cn(
          'max-w-none animate mt-8 md:min-w-[45ch] overflow-x-hidden',
          integ.typography.class
        )}
      >
        <slot />
      </div>
    </article>
  </main>

  <div class='bottom mt-6 items-start gap-x-10 md:flex'>
    {/* Bottom */}
    <div class='mt-8 flex-1 text-muted-foreground md:min-w-[50ch]'>
      <slot name='bottom' />
    </div>
    <div class='min-w-48 basis-60'>
      <slot name='bottom-sidebar' />
    </div>
  </div>

  <BackToTop header='content-header' content='content' />
</PageLayout>
